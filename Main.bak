#lang racket
(require "Globales.rkt")
(require "TDA_Respuestas.rkt")
(require "TDA_Preguntas.rkt")
(require "TDA_Usuarios.rkt")
(require "TDA_Stack.rkt")


; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


; -------------------- Funciones Login --------------------


(define (credencialValida? lista_usuarios usuario contrasena)
  (if (vacio? lista_usuarios)
      #f
      (if (and (equal? (car (getCredencial_u (car lista_usuarios))) usuario) (equal? (car (cdr (getCredencial_u (car lista_usuarios)))) contrasena))
          #t
          (credencialValida? (cdr lista_usuarios) usuario contrasena))))


; -------------------- Funciones ask --------------------


(define (agregarPregunta_preguntas lista_preguntas pregunta)(cons pregunta lista_preguntas))

(define (agregarPregunta_usuarios lista_usuarios usuario pregunta lista)
  (if (vacio? lista_usuarios)
      lista
      (if (equal? (car (getCredencial_u (car lista_usuarios))) usuario)
          (agregarPregunta_usuarios (cdr lista_usuarios) usuario pregunta (cons (list (getCredencial_u (car lista_usuarios)) (cons pregunta (getPreguntas_u (car lista_usuarios))) (getRespuestas_u (car lista_usuarios)) (getReputacion_u (car lista_usuarios))) lista))
          (agregarPregunta_usuarios (cdr lista_usuarios) usuario pregunta (cons (car lista_usuarios) lista)))))


; -------------------- Funciones reward --------------------


(define (agregarRec_preguntas lista_preguntas ID Rec usuario lista)
  (if (vacio? lista_preguntas)
      lista
      (if (= (getID_p (car lista_preguntas)) ID)
          (agregarRec_preguntas (cdr lista_preguntas) ID Rec usuario (cons (list (getVotos_p (car lista_preguntas)) (getRespuestas_p (car lista_preguntas)) (getID_p (car lista_preguntas)) (getEtiquetas_p (car lista_preguntas)) (getTitulo_p (car lista_preguntas)) (getContenido_p (car lista_preguntas)) (getFecha_p (car lista_preguntas)) (getAutor_p (car lista_preguntas)) (getEstado_p (car lista_preguntas)) (getRecompensa_p (car lista_preguntas)) (getReporte_p (car lista_preguntas)) (cons (list usuario Rec) (getRecompensasR_p (car lista_preguntas)))) lista))
          (agregarRec_preguntas (cdr lista_preguntas) ID Rec usuario (cons (car lista_preguntas) lista)))))
  
  
(define (agregarRec_usuarios lista_usuarios lista_preguntas Rec usuario lista ID_pregunta)
  (if (vacio? lista_usuarios)
      lista
      (if (equal? (car (getCredencial_u (car lista_usuarios))) usuario)
          (cons (list (getCredencial_u (car lista_usuarios)) (getPreguntas_usuario usuario (agregarRec_preguntas lista_preguntas ID_pregunta Rec usuario (list )) (list )) (getRespuestas_u (car lista_usuarios)) (- (getReputacion_u (car lista_usuarios)) Rec)) lista)
          (cons (car lista_usuarios) lista))))


; -------------------- Funciones answer --------------------


(define (estaIDans? ID preguntas)
  (if (vacio? preguntas)
      #f
      (if (= ID (getID_p (car preguntas)))
          #t
          (estaIDans? ID (cdr preguntas)))))


(define (agregarRespuesta_R_a lista_respuestas respuesta)(cons respuesta lista_respuestas))


(define (agregarRespuesta_P_a lista_preguntas lista_respuestas ID respuesta lista)
  (if (vacio? lista_preguntas)
      lista
      (if (= (getID_p (car lista_preguntas)) ID)
          (agregarRespuesta_P_a (cdr lista_preguntas) lista_respuestas ID respuesta (cons (list (getVotos_p (car lista_preguntas)) (cons respuesta (getRespuestas_p (car lista_preguntas))) (getID_p (car lista_preguntas)) (getEtiquetas_p (car lista_preguntas)) (getTitulo_p (car lista_preguntas)) (getContenido_p (car lista_preguntas)) (getFecha_p (car lista_preguntas)) (getAutor_p (car lista_preguntas)) (getEstado_p (car lista_preguntas)) (getRecompensa_p (car lista_preguntas)) (getReporte_p (car lista_preguntas)) (getRecompensasR_p (car lista_preguntas))) lista))
          (agregarRespuesta_P_a (cdr lista_preguntas) lista_respuestas ID respuesta (cons (car lista_preguntas) lista)))))


(define (agregarRespuesta_U lista_usuarios lista_preguntas lista_respuestas ID respuesta usuario lista)
  (if (vacio? lista_usuarios)
      lista
      (if (equal? (car (getCredencial_u (car lista_usuarios))) usuario)
          (agregarRespuesta_U (cdr lista_usuarios) lista_preguntas lista_respuestas ID respuesta usuario (cons  (list (getCredencial_u (car lista_usuarios)) (getPreguntas_usuario usuario (agregarRespuesta_P_a lista_preguntas lista_respuestas ID respuesta (list )) (list )) (cons respuesta (getRespuestas_u (car lista_usuarios))) (getReputacion_u (car lista_usuarios))) lista))
          (agregarRespuesta_U (cdr lista_usuarios) lista_preguntas lista_respuestas ID respuesta usuario (cons  (list (getCredencial_u (car lista_usuarios)) (getPreguntas_usuario usuario (agregarRespuesta_P_a lista_preguntas lista_respuestas ID respuesta (list )) (list )) (getRespuestas_u (car lista_usuarios)) (getReputacion_u (car lista_usuarios))) lista)))))

  
; -------------------- Funciones accept --------------------


(define (estaRespuesta_acc? lista_respuestas correlativo)
  (if (vacio? lista_respuestas)
      #f
      (if (= (getCorrelativo_r (car lista_respuestas)) correlativo)
          #t
          (estaRespuesta_acc? (cdr lista_respuestas) correlativo))))
  

(define (estaPregunta_Respuesta_acc? lista_preguntas ID correlativo)
  (if (vacio? lista_preguntas)
      #f
      (if (= ID (getID_p (car lista_preguntas)))
          (if (estaRespuesta_acc? (getRespuestas_p (car lista_preguntas)) correlativo)
              #t
              #f)
          (estaPregunta_Respuesta_acc? (cdr lista_preguntas) ID))))


(define (getRespuesta_acc lista_respuestas correlativo)
  (if (= (getCorrelativo_r (car lista_respuestas)) correlativo)
      (car lista_respuestas)
      (getRespuesta_acc (cdr lista_respuestas) correlativo)))


(define (getRecompensa_R_acc lista_retenidos contador)
  (if (vacio? lista_retenidos)
      contador
      (getRecompensa_R_acc (cdr lista_retenidos) (+ (car (cdr (car lista_retenidos))) contador))))


(define (getRecompensa_P_acc ID_pregunta lista_preguntas)(+ (getRecompensa_p (getPregunta_ID ID_pregunta lista_preguntas)) (getRecompensa_R_acc (getRecompensasR_p (getPregunta_ID ID_pregunta lista_preguntas)) 0)))


(define (getRespuestas_acc lista_respuestas correlativo ID_pregunta lista_preguntas lista)
  (if (vacio? lista_respuestas)
      lista
      (if (and (= (getCorrelativo_r (car lista_respuestas)) correlativo) (= (getID_r (car lista_respuestas)) ID_pregunta))
          (getRespuestas_acc (cdr lista_respuestas) correlativo ID_pregunta lista_preguntas (cons (list (getNombre_r (car lista_respuestas)) (getFecha_r (car lista_respuestas)) (getID_r (car lista_respuestas)) (getCorrelativo_r (car lista_respuestas)) (getVotos_r (car lista_respuestas)) 1 (getReportes_r (car lista_respuestas)) (getRespuesta_r (car lista_respuestas)) (+ (getRecompensa_P_acc ID_pregunta lista_preguntas) (getRecompensa_r (car lista_respuestas)))) lista))
          (getRespuestas_acc (cdr lista_respuestas) correlativo ID_pregunta lista_preguntas (cons (car lista_respuestas) lista)))))


(define (getPreguntas_acc lista_respuestas ID_pregunta lista_preguntas lista)
  (if (vacio? lista_preguntas)
      lista
      (if (= (getID_p (car lista_preguntas)) ID_pregunta)
          (getPreguntas_acc lista_respuestas ID_pregunta (cdr lista_preguntas) (cons (list (getVotos_p (car lista_preguntas)) (getRespuestas_pregunta ID_pregunta lista_respuestas (list )) (getID_p (car lista_preguntas)) (getEtiquetas_p (car lista_preguntas)) (getTitulo_p (car lista_preguntas)) (getContenido_p (car lista_preguntas)) (getFecha_p (car lista_preguntas)) (getAutor_p (car lista_preguntas)) (getEstado_p (car lista_preguntas)) 0 (getReporte_p (car lista_preguntas)) (list )) lista))
          (getPreguntas_acc lista_respuestas ID_pregunta (cdr lista_preguntas) (cons (car lista_preguntas) lista)))))


(define (getUsuarios_acc lista_usuarios lista_preguntas lista_respuestas usuario_P usuario_R lista Recompensa)
  (if (vacio? lista_usuarios)
      lista
      (if (equal? (car (car lista_usuarios)) usuario_P)
          (getUsuarios_acc (cdr lista_usuarios) lista_preguntas lista_respuestas usuario_P usuario_R (cons (list (getCredencial_u (car lista_usuarios)) (getPreguntas_usuario (car (getCredencial_u (car lista_usuarios))) lista_preguntas (list )) (getRespuestas_usuario (car (getCredencial_u (car lista_usuarios))) lista_respuestas (list )) (+ 2 (getReputacion_u (car lista_usuarios)))) lista))
          (if (equal? (car (getCredencial_u (car lista_usuarios))) usuario_R)
              (getUsuarios_acc (cdr lista_usuarios) lista_preguntas lista_respuestas usuario_P usuario_R (cons (list (getCredencial_u (car lista_usuarios)) (getPreguntas_usuario (car (getCredencial_u (car lista_usuarios))) lista_preguntas (list )) (getRespuestas_usuario (car (getCredencial_u (car lista_usuarios))) lista_respuestas (list )) (+ (+ 15 Recompensa) (getReputacion_u (car lista_usuarios)))) lista) Recompensa)
              (getUsuarios_acc (cdr lista_usuarios) lista_preguntas lista_respuestas usuario_P usuario_R (cons (list (getCredencial_u (car lista_usuarios)) (getPreguntas_usuario (car (getCredencial_u (car lista_usuarios))) lista_preguntas (list )) (getRespuestas_usuario (car (getCredencial_u (car lista_usuarios))) lista_respuestas (list )) (getReputacion_u (car lista_usuarios))) lista) Recompensa)))))


(define (getUsuario_recompensa lista_respuestas correlativo)
  (if (= (getCorrelativo_r (car lista_respuestas)) correlativo)
      (getNombre_r (car lista_respuestas))
      (getUsuario_recompensa (cdr lista_respuestas) correlativo)))


; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
; ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


; -------------------- Register --------------------


(define (register lista_stack string_usuario string_contrasena)
  (if (usuarioValido? string_usuario (getUsuarios_s lista_stack))
      (list (getPreguntas_s lista_stack) (getRespuestas_s lista_stack) (cons (list (list string_usuario string_contrasena) (getPreguntas_usuario string_usuario (getPreguntas_s lista_stack) (list )) (getRespuestas_usuario string_usuario (getRespuestas_s lista_stack) (list )) 0) (getUsuarios_s lista_stack)) "")
      lista_stack))


;(register stackOverflow "Soy Batman" "zorro no te lo lleves")
;(register stackOverflow "Pikachu" "Impactrueno")
;(register stackOverflow "Usuario1" "Contrasena generica")


; -------------------- Login --------------------


(define (login lista_stack usuario contrasena operacion)
  (if (and (credencial_u? (list usuario contrasena)) (stack? lista_stack))
      (if (credencialValida? (getUsuarios_s lista_stack) usuario contrasena)
          (operacion (list (getPreguntas_s lista_stack) (getRespuestas_s lista_stack) (getUsuarios_s lista_stack) usuario))
          (operacion lista_stack))
      (operacion lista_stack)))


; -------------------- ask --------------------


(define (ask lista_stack)(lambda (lista_fecha)(lambda (titulo lista_etiquetas contenido)
                                                       (if (equal? (getUsuario_s lista_stack) "")
                                                           lista_stack
                                                           (list (agregarPregunta_preguntas (getPreguntas_s lista_stack) (list (list 0 0) (getRespuestas_pregunta (+ 1 (len (getPreguntas_s lista_stack) 0)) listaR (list )) (+ 1 (len (getPreguntas_s lista_stack) 0)) lista_etiquetas titulo contenido lista_fecha (getUsuario_s lista_stack) 1 0 0 (list ))) (getRespuestas_s lista_stack) (agregarPregunta_usuarios (getUsuarios_s lista_stack) (getUsuario_s lista_stack) (list (list 0 0) (getRespuestas_pregunta (+ 1 (len (getPreguntas_s lista_stack) 0)) listaR (list )) (+ 1 (len (getPreguntas_s lista_stack) 0)) lista_etiquetas titulo contenido lista_fecha (getUsuario_s lista_stack) 1 0 0 (list )) (list )) ""))))) 


;(((login stack "Usuario1" "contrasena1" ask) (list 18 11 2020)) "Mi pregunta 1" (list "etiqueta 3" "etiqueta 2" "etiqueta 1") "contenido 1")
;(((login stack "Usuario2" "contrasena2" ask) (list 20 20 2020)) "Mi pregunta 2" (list "etiqueta 3" "etiqueta 2" "etiqueta 1") "contenido 2")
;(((login stack "Usuario generico" "Contrasena generica" ask) (list 5 8 1997)) "Mi pregunta generica" (list "etiqueta 3" "etiqueta 2" "etiqueta 1") "contenido generico")


; -------------------- reward --------------------


(define (reward lista_stack)(lambda (ID_pregunta)(lambda (recompensa)
                                                   (if (equal? (getUsuario_s lista_stack) "")
                                                       lista_stack
                                                       (if (<= recompensa (getReputacion_u (getUsuario_usuario (getUsuario_s lista_stack) (getUsuarios_s lista_stack))))
                                                           (list (agregarRec_preguntas (getPreguntas_s lista_stack) ID_pregunta recompensa (getUsuario_s lista_stack) (list )) (getRespuestas_s lista_stack) (agregarRec_usuarios (getUsuarios_s lista_stack) (getPreguntas_s lista_stack) recompensa (getUsuario_s lista_stack) (list ) ID_pregunta) "")
                                                           (list (getPreguntas_s lista_stack) (getRespuestas_s lista_stack) (getUsuarios_s lista_stack) ""))))))


;(((login stack "Usuario1" "contrasena1" reward) 1) 2)
;(((login stack "Usuario2" "contrasena2" reward) 2) 12)
;(((login stack "Usuario generico" "contrasena generica" reward) 99) 99999)


; -------------------- answer --------------------
  

(define (answer lista_stack)(lambda (fecha)(lambda (ID_pregunta)(lambda (respuesta)
                                                                  (if (equal? (getUsuario_s lista_stack) "")
                                                                      lista_stack
                                                                      (if (estaIDans? ID_pregunta (getPreguntas_s lista_stack))
                                                                          (list (agregarRespuesta_P_a (getPreguntas_s lista_stack) (getRespuestas_s lista_stack) ID_pregunta (list (getUsuario_s lista_stack) fecha ID_pregunta (+ (len (getRespuestas_pregunta ID_pregunta (getRespuestas_s lista_stack) (list )) 0) 1)  (list 0 0) 1 0 respuesta 0) (list )) (agregarRespuesta_R_a (getRespuestas_s lista_stack) (list (getUsuario_s lista_stack) fecha ID_pregunta (+ 1 (len (getRespuestas_pregunta ID_pregunta (getRespuestas_s lista_stack) (list )) 0))  (list 0 0) 1 0 respuesta 0)) (agregarRespuesta_U (getUsuarios_s lista_stack) (getPreguntas_s lista_stack) (getRespuestas_s lista_stack) ID_pregunta (list (getUsuario_s lista_stack) fecha ID_pregunta (+ 1 (len (getRespuestas_pregunta ID_pregunta (getRespuestas_s lista_stack) (list )) 0))  (list 0 0) 1 0 respuesta 0) (getUsuario_s lista_stack) (list )))
                                                                          (list (getPreguntas_s lista_stack) (getRespuestas_s lista_stack) (getUsuarios_s lista_stack) "")))))))


;((((login stack "Usuario1" "contrasena1" answer) (list 25 10 2020)) 6) "Mi respuesta 1")
;((((login stack "Usuario2" "contrasena2" answer) (list 25 10 2020)) 1) "Mi respuesta 2")
;((((login stack "Usuario generica" "contrasena generica" answer) (list 25 10 2020)) 9999) "Mi respuesta generica")


; -------------------- accept --------------------
  

(define (accept lista_stack)(lambda(ID_pregunta)(lambda (correlativo)
                                                  (if (equal? (getUsuario_s lista_stack) "")
                                                                      lista_stack
                                                                      (if (estaPregunta_Respuesta_acc? (getPreguntas_usuario (getUsuario_s lista_stack) (getPreguntas_s lista_stack) (list )) ID_pregunta correlativo)
                                                                          (list (getPreguntas_acc (getRespuestas_acc (getRespuestas_s lista_stack) correlativo ID_pregunta (getPreguntas_s lista_stack) (list )) ID_pregunta (getPreguntas_s lista_stack) (list )) (getRespuestas_acc (getRespuestas_s lista_stack) correlativo ID_pregunta (getPreguntas_s lista_stack) (list )) (getUsuarios_acc (getUsuarios_s lista_stack) (getPreguntas_acc (getRespuestas_acc (getRespuestas_s lista_stack) correlativo ID_pregunta (getPreguntas_s lista_stack) (list )) ID_pregunta (getPreguntas_s lista_stack) (list )) (getRespuestas_acc (getRespuestas_s lista_stack) correlativo ID_pregunta (getPreguntas_s lista_stack) (list )) (getUsuario_s lista_stack) (getUsuario_recompensa (getRespuestas_p (getPregunta_ID ID_pregunta (getPreguntas_s lista_stack))) correlativo) (list ) (getRecompensa_P_acc ID_pregunta (getPreguntas_s lista_stack))) "") 
                                                                          (list (getPreguntas_s lista_stack) (getRespuestas_s lista_stack) (getUsuarios_s lista_stack) ""))))))


;(((login stack "Usuario1" "contrasena1" accept) 1) 2)
;(((login stack "Usuario2" "contrasena2" accept) 5) 999)
;(((login stack "Usuario generico" "contrasena generica" accept) 99) 2)


; -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

